{"ast":null,"code":"import * as Types from '../action/types';\n\nconst transactionReducer = (state = [], action) => {\n  switch (action.type) {\n    case Types.LOAD_TRANSACTIONS:\n      {\n        return action.payload.transactions;\n      }\n\n    case Types.CREATE_TRANSACTION:\n      {\n        let transactions = [...state];\n        transactions.unshift(action.payload.transaction);\n        return transactions;\n      }\n\n    case Types.REMOVE_TRANSACTION:\n      {\n        let transactions = [...state];\n        return transactions.filter(tran => {\n          return tran._id != action.payload.id;\n        });\n      }\n\n    case Types.UPDATE_TRANSACTION:\n      {\n        let transactions = [...state];\n        return transactions;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default transactionReducer;","map":{"version":3,"sources":["F:/Work/Web/React/StactLerner/Project/money-management-app/client/src/store/reducers/transectionsReducer.js"],"names":["Types","transactionReducer","state","action","type","LOAD_TRANSACTIONS","payload","transactions","CREATE_TRANSACTION","unshift","transaction","REMOVE_TRANSACTION","filter","tran","_id","id","UPDATE_TRANSACTION"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,iBAAvB;;AAKA,MAAMC,kBAAkB,GAAC,CAACC,KAAK,GAAC,EAAP,EAAUC,MAAV,KAAmB;AACxC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,KAAK,CAACK,iBAAX;AAA6B;AACzB,eAAOF,MAAM,CAACG,OAAP,CAAeC,YAAtB;AACH;;AACD,SAAKP,KAAK,CAACQ,kBAAX;AAA8B;AAC1B,YAAID,YAAY,GAAC,CAAC,GAAGL,KAAJ,CAAjB;AACAK,QAAAA,YAAY,CAACE,OAAb,CAAqBN,MAAM,CAACG,OAAP,CAAeI,WAApC;AACA,eAAOH,YAAP;AACH;;AACD,SAAKP,KAAK,CAACW,kBAAX;AAA8B;AACtB,YAAIJ,YAAY,GAAC,CAAC,GAAGL,KAAJ,CAAjB;AACA,eAAOK,YAAY,CAACK,MAAb,CAAoBC,IAAI,IAAE;AAC7B,iBAAOA,IAAI,CAACC,GAAL,IAAUX,MAAM,CAACG,OAAP,CAAeS,EAAhC;AACH,SAFM,CAAP;AAGP;;AACD,SAAKf,KAAK,CAACgB,kBAAX;AAA8B;AAC1B,YAAIT,YAAY,GAAC,CAAC,GAAGL,KAAJ,CAAjB;AACA,eAAOK,YAAP;AAIH;;AAGD;AAAS,aAAOL,KAAP;AAxBb;AA2BH,CA5BD;;AA6BA,eAAeD,kBAAf","sourcesContent":["import * as Types from '../action/types'\r\n\r\n\r\n\r\n\r\nconst transactionReducer=(state=[],action)=>{\r\n    switch(action.type){\r\n        case Types.LOAD_TRANSACTIONS:{\r\n            return action.payload.transactions\r\n        }\r\n        case Types.CREATE_TRANSACTION:{\r\n            let transactions=[...state]\r\n            transactions.unshift(action.payload.transaction)\r\n            return transactions\r\n        }\r\n        case Types.REMOVE_TRANSACTION:{\r\n                let transactions=[...state]\r\n                return transactions.filter(tran=>{\r\n                    return tran._id!=action.payload.id\r\n                })\r\n        }\r\n        case Types.UPDATE_TRANSACTION:{\r\n            let transactions=[...state]\r\n            return transactions\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        default: return state\r\n    }\r\n\r\n}\r\nexport default transactionReducer"]},"metadata":{},"sourceType":"module"}