{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\Web\\\\React\\\\StactLerner\\\\Project\\\\money-management-app\\\\client\\\\src\\\\pages\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../store/action/authAction\";\n\nclass Register extends Component {\n  //name ,email,password,confrimpassword\n  constructor() {\n    super();\n\n    this.changeHandeler = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmitHandeler = event => {\n      event.preventDefault();\n      let {\n        name,\n        email,\n        password,\n        confrimpassword\n      } = this.state;\n      this.props.register({\n        name,\n        email,\n        password,\n        confrimpassword\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confrimpassword: \"\",\n      error: {}\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (JSON.stringify(nextProps.auth.error) != JSON.stringify(prevState.error)) {\n      return {\n        error: nextProps.auth.error\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    let {\n      name,\n      email,\n      password,\n      confrimpassword,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center display-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandeler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: this.props.error.name ? 'form-control is-invalid' : 'form-control',\n      placeholder: \"Enter Your Name\",\n      name: \"name\",\n      id: \"name\",\n      value: name,\n      onChange: this.changeHandeler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, error.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: error.email ? 'form-control is-invalid' : 'form-control',\n      placeholder: \"Enter Your Email\",\n      name: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: this.changeHandeler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, error.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: error.password ? 'form-control is-invalid' : 'form-control',\n      placeholder: \"Enter Your Password\",\n      name: \"password\",\n      id: \"password\",\n      value: password,\n      onChange: this.changeHandeler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, error.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"Confirm Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: error.confrimpassword ? 'form-control is-invalid' : 'form-control',\n      placeholder: \"Confirm Your Password\",\n      name: \"confrimpassword\",\n      id: \"confirmPassword\",\n      value: confrimpassword,\n      onChange: this.changeHandeler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, error.confrimpassword)), /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, \"Already Have Account? Login here\"), /*#__PURE__*/React.createElement(\"button\", {\n      onSubmit: this.onSubmitHandeler,\n      className: \"btn btn-primary d-block my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, \"Register\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);","map":{"version":3,"sources":["F:/Work/Web/React/StactLerner/Project/money-management-app/client/src/pages/Register.js"],"names":["React","Component","Link","connect","register","Register","constructor","changeHandeler","event","setState","target","name","value","onSubmitHandeler","preventDefault","email","password","confrimpassword","state","props","error","getDerivedStateFromProps","nextProps","prevState","JSON","stringify","auth","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {register} from \"../store/action/authAction\"\r\n\r\n\r\nclass Register extends Component {\r\n    //name ,email,password,confrimpassword\r\n    constructor(){\r\n        super()\r\n       this. state={\r\n                name:\"\",\r\n                email:\"\",\r\n                password:\"\",\r\n                confrimpassword:\"\",\r\n                error:{}\r\n            }\r\n    }\r\n   \r\n\r\n     static getDerivedStateFromProps(nextProps,prevState){\r\n    if(JSON.stringify(nextProps.auth.error)!=JSON.stringify(prevState.error)){\r\n          return{\r\n              error:nextProps.auth.error\r\n          }  \r\n    }\r\n    return null\r\n}\r\n\r\n\r\n\r\n\r\n    changeHandeler=(event)=>{\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmitHandeler=(event)=>{\r\n        event.preventDefault()\r\n\r\n        let {name, email, password, confrimpassword} = this.state \r\n        this.props.register({\r\n            name,\r\n            email,\r\n            password,\r\n            confrimpassword\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        let {name,email,password,confrimpassword,error}=this.state \r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3\">\r\n                    <h1 className=\"text-center display-4\">Register</h1>\r\n                    <form onSubmit={this.onSubmitHandeler}>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Name:</label>\r\n                            <input type=\"text\"\r\n                                className={this.props.error.name ? 'form-control is-invalid' : 'form-control'}\r\n                                  placeholder=\"Enter Your Name\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    value={name}\r\n                                    onChange={this.changeHandeler}\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {error.name}\r\n                            </div>\r\n\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email:</label>\r\n                            <input type=\"text\"\r\n                                className={error.email ? 'form-control is-invalid' : 'form-control'}\r\n                                    placeholder=\"Enter Your Email\"\r\n                                    name=\"email\"\r\n                                    id=\"email\"\r\n                                    value={email}\r\n                                    onChange={this.changeHandeler}\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {error.email}\r\n                            </div>\r\n                        </div> \r\n                        \r\n                        \r\n                        \r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password:</label>\r\n                            <input type=\"password\"\r\n                                className={error.password ? 'form-control is-invalid' : 'form-control'}\r\n                                    placeholder=\"Enter Your Password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    value={password}\r\n                                    onChange={this.changeHandeler}\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {error.password}\r\n                            </div>\r\n                        </div> \r\n                        \r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n                            <input type=\"password\"\r\n                                className={error.confrimpassword ? 'form-control is-invalid' : 'form-control'}\r\n                                    placeholder=\"Confirm Your Password\"\r\n                                   name=\"confrimpassword\"\r\n                                    id=\"confirmPassword\"\r\n                                    value={confrimpassword}\r\n                                    onChange={this.changeHandeler}\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {error.confrimpassword}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Link to=\"/login\">Already Have Account? Login here</Link>\r\n                        <button onSubmit={this.onSubmitHandeler} className=\"btn btn-primary d-block my-3\">Register</button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    auth:state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps,{register})( Register);"]},"metadata":{},"sourceType":"module"}