{"ast":null,"code":"import * as Types from './types';\nimport Axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport setAuthToken from \"../../utils/setAuthToken\";\nexport const register = (user, history) => dispatch => {\n  Axios.post(\"http://localhost:2000/api/users/register/\", user).then(res => {\n    console.log(res);\n    dispatch({\n      type: Types.USERS_ERROR,\n      payload: {\n        error: {}\n      }\n    });\n    console.log(res);\n    history.push('/login');\n  }).catch(error => {\n    dispatch({\n      type: Types.USERS_ERROR,\n      payload: {\n        error: error.response.data\n      }\n    });\n  });\n};\nexport const login = (user, history) => dispatch => {\n  Axios.post('http://localhost:2000/api/users/login/', user).then(res => {\n    let token = res.data.token;\n    localStorage.setItem(\"auth_token\", token);\n    setAuthToken(token);\n    let decode = jwtDecode(token);\n    dispatch({\n      type: Types.SET_USER,\n      payload: {\n        user: decode\n      }\n    });\n    history.push('/');\n  }).catch(error => {\n    console.log(error.response.data);\n    dispatch({\n      type: Types.USERS_ERROR,\n      payload: {\n        error: error.response.data\n      }\n    });\n  });\n};\nexport const logout = history => {\n  localStorage.removeItem(\"auth_token\");\n  history.push('/login');\n  return {\n    type: Types.SET_USER,\n    payload: {\n      user: {}\n    }\n  };\n};","map":{"version":3,"sources":["F:/Work/Web/React/StactLerner/Project/money-management-app/client/src/store/action/authAction.js"],"names":["Types","Axios","jwtDecode","setAuthToken","register","user","history","dispatch","post","then","res","console","log","type","USERS_ERROR","payload","error","push","catch","response","data","login","token","localStorage","setItem","decode","SET_USER","logout","removeItem"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAGA,OAAO,MAAMC,QAAQ,GAAC,CAACC,IAAD,EAAMC,OAAN,KAAgBC,QAAQ,IAAE;AAE5CN,EAAAA,KAAK,CAACO,IAAN,CAAW,2CAAX,EAAuDH,IAAvD,EACKI,IADL,CACUC,GAAG,IAAE;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACDH,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACb,KAAK,CAACc,WADN;AAELC,MAAAA,OAAO,EAAC;AACJC,QAAAA,KAAK,EAAC;AADF;AAFH,KAAD,CAAR;AAQAL,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,IAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AAEF,GAdL,EAeKC,KAfL,CAeWF,KAAK,IAAE;AACZT,IAAAA,QAAQ,CAAC;AACHM,MAAAA,IAAI,EAACb,KAAK,CAACc,WADR;AAEHC,MAAAA,OAAO,EAAC;AACRC,QAAAA,KAAK,EAAEA,KAAK,CAACG,QAAN,CAAeC;AADd;AAFL,KAAD,CAAR;AAMJ,GAtBF;AA0BH,CA5BM;AA+BP,OAAO,MAAMC,KAAK,GAAC,CAAChB,IAAD,EAAMC,OAAN,KAAgBC,QAAQ,IAAE;AAEzCN,EAAAA,KAAK,CAACO,IAAN,CAAW,wCAAX,EAAoDH,IAApD,EACKI,IADL,CACUC,GAAG,IAAE;AACP,QAAIY,KAAK,GAACZ,GAAG,CAACU,IAAJ,CAASE,KAAnB;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAkCF,KAAlC;AACAnB,IAAAA,YAAY,CAACmB,KAAD,CAAZ;AACA,QAAIG,MAAM,GAACvB,SAAS,CAACoB,KAAD,CAApB;AAEAf,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACb,KAAK,CAAC0B,QADN;AAELX,MAAAA,OAAO,EAAC;AACJV,QAAAA,IAAI,EAACoB;AADD;AAFH,KAAD,CAAR;AAMAnB,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AAGH,GAjBL,EAkBKC,KAlBL,CAkBWF,KAAK,IAAE;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACG,QAAN,CAAeC,IAA3B;AACAb,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAACb,KAAK,CAACc,WADN;AAELC,MAAAA,OAAO,EAAC;AACJC,QAAAA,KAAK,EAACA,KAAK,CAACG,QAAN,CAAeC;AADjB;AAFH,KAAD,CAAR;AAMH,GA1BL;AAmCH,CArCM;AAuCP,OAAO,MAAMO,MAAM,GAACrB,OAAO,IAAE;AACzBiB,EAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAtB,EAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACA,SAAM;AACFJ,IAAAA,IAAI,EAACb,KAAK,CAAC0B,QADT;AAEFX,IAAAA,OAAO,EAAC;AACJV,MAAAA,IAAI,EAAC;AADD;AAFN,GAAN;AAMH,CATM","sourcesContent":["import * as Types from './types'\r\nimport Axios from 'axios'\r\nimport jwtDecode from 'jwt-decode'\r\nimport setAuthToken from \"../../utils/setAuthToken\"\r\n\r\n\r\nexport const register=(user,history)=>dispatch=>{\r\n\r\n    Axios.post(\"http://localhost:2000/api/users/register/\",user)\r\n        .then(res=>{\r\n            console.log(res)\r\n           dispatch({\r\n               type:Types.USERS_ERROR,\r\n               payload:{\r\n                   error:{}\r\n               }\r\n\r\n           })\r\n\r\n           console.log(res)\r\n           history.push('/login')\r\n\r\n        })\r\n        .catch(error=>{\r\n          dispatch({\r\n                type:Types.USERS_ERROR,\r\n                payload:{\r\n                error: error.response.data\r\n            }\r\n        })\r\n     })\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const login=(user,history)=>dispatch=>{\r\n\r\n    Axios.post('http://localhost:2000/api/users/login/',user)\r\n        .then(res=>{\r\n            let token=res.data.token\r\n         \r\n            localStorage.setItem(\"auth_token\",token)\r\n            setAuthToken(token)\r\n            let decode=jwtDecode(token)\r\n         \r\n            dispatch({\r\n                type:Types.SET_USER,\r\n                payload:{\r\n                    user:decode\r\n                }\r\n            })\r\n            history.push('/')\r\n\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log(error.response.data)\r\n            dispatch({\r\n                type:Types.USERS_ERROR,\r\n                payload:{\r\n                    error:error.response.data\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport const logout=history=>{\r\n    localStorage.removeItem(\"auth_token\")\r\n    history.push('/login')\r\n    return{\r\n        type:Types.SET_USER,\r\n        payload:{\r\n            user:{}\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}